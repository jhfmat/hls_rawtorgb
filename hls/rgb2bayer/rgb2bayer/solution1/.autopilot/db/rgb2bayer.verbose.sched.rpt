

================================================================
== Vivado HLS Report for 'rgb2bayer'
================================================================
* Date:           Wed Aug  4 11:09:29 2021

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        rgb2bayer
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.510|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|         3|          1|          1|     ?|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	5  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	2  / true
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.51>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%tmp_data_V = alloca i8"   --->   Operation 6 'alloca' 'tmp_data_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i24* %s_axis_video_V_data_V), !map !66"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i3* %s_axis_video_V_keep_V), !map !70"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i3* %s_axis_video_V_strb_V), !map !74"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %s_axis_video_V_user_V), !map !78"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %s_axis_video_V_last_V), !map !82"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %s_axis_video_V_id_V), !map !86"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %s_axis_video_V_dest_V), !map !90"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %m_axis_video_V_data_V), !map !94"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_keep_V), !map !98"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_strb_V), !map !102"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_user_V), !map !106"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_last_V), !map !110"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_id_V), !map !114"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_dest_V), !map !118"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %hsize_in), !map !122"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %vsize_in), !map !128"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2 %pattern_V), !map !132"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @rgb2bayer_str) nounwind"   --->   Operation 24 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%pattern_V_read = call i2 @_ssdm_op_Read.ap_auto.i2(i2 %pattern_V)"   --->   Operation 25 'read' 'pattern_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%vsize_in_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %vsize_in)"   --->   Operation 26 'read' 'vsize_in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%hsize_in_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %hsize_in)"   --->   Operation 27 'read' 'hsize_in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i24* %s_axis_video_V_data_V, i3* %s_axis_video_V_keep_V, i3* %s_axis_video_V_strb_V, i1* %s_axis_video_V_user_V, i1* %s_axis_video_V_last_V, i1* %s_axis_video_V_id_V, i1* %s_axis_video_V_dest_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [src/cpp/rgb2bayer.cpp:7]   --->   Operation 28 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %m_axis_video_V_data_V, i1* %m_axis_video_V_keep_V, i1* %m_axis_video_V_strb_V, i1* %m_axis_video_V_user_V, i1* %m_axis_video_V_last_V, i1* %m_axis_video_V_id_V, i1* %m_axis_video_V_dest_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [src/cpp/rgb2bayer.cpp:8]   --->   Operation 29 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [src/cpp/rgb2bayer.cpp:9]   --->   Operation 30 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%cast = zext i32 %vsize_in_read to i64"   --->   Operation 31 'zext' 'cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%cast1 = zext i32 %hsize_in_read to i64"   --->   Operation 32 'zext' 'cast1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (8.51ns)   --->   "%bound = mul i64 %cast1, %cast"   --->   Operation 33 'mul' 'bound' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (1.76ns)   --->   "br label %1" [src/cpp/rgb2bayer.cpp:21]   --->   Operation 34 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 7.80>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i64 [ 0, %0 ], [ %indvar_flatten_next, %._crit_edge ]"   --->   Operation 35 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%j = phi i31 [ 0, %0 ], [ %j_cast5_mid2_v, %._crit_edge ]" [src/cpp/rgb2bayer.cpp:21]   --->   Operation 36 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%i = phi i31 [ 0, %0 ], [ %i_1, %._crit_edge ]"   --->   Operation 37 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [src/cpp/rgb2bayer.cpp:23]   --->   Operation 38 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%i_cast = zext i31 %i to i32" [src/cpp/rgb2bayer.cpp:24]   --->   Operation 39 'zext' 'i_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (2.47ns)   --->   "%tmp_4 = icmp slt i32 %i_cast, %hsize_in_read" [src/cpp/rgb2bayer.cpp:24]   --->   Operation 40 'icmp' 'tmp_4' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (2.77ns)   --->   "%exitcond_flatten = icmp eq i64 %indvar_flatten, %bound"   --->   Operation 41 'icmp' 'exitcond_flatten' <Predicate = true> <Delay = 2.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (3.52ns)   --->   "%indvar_flatten_next = add i64 %indvar_flatten, 1"   --->   Operation 42 'add' 'indvar_flatten_next' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "br i1 %exitcond_flatten, label %2, label %.reset"   --->   Operation 43 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (2.52ns)   --->   "%j_s = add i31 1, %j" [src/cpp/rgb2bayer.cpp:21]   --->   Operation 44 'add' 'j_s' <Predicate = (!exitcond_flatten)> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.73ns)   --->   "%j_cast5_mid2_v = select i1 %tmp_4, i31 %j, i31 %j_s" [src/cpp/rgb2bayer.cpp:21]   --->   Operation 45 'select' 'j_cast5_mid2_v' <Predicate = (!exitcond_flatten)> <Delay = 0.73> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_1 = trunc i31 %j_cast5_mid2_v to i1" [src/cpp/rgb2bayer.cpp:21]   --->   Operation 46 'trunc' 'tmp_1' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_3 = trunc i31 %i to i1" [src/cpp/rgb2bayer.cpp:24]   --->   Operation 47 'trunc' 'tmp_3' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.97ns)   --->   "%i_cast4_mid2 = and i1 %tmp_4, %tmp_3" [src/cpp/rgb2bayer.cpp:24]   --->   Operation 48 'and' 'i_cast4_mid2' <Predicate = (!exitcond_flatten)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%empty = call { i24, i3, i3, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.i24P.i3P.i3P.i1P.i1P.i1P.i1P(i24* %s_axis_video_V_data_V, i3* %s_axis_video_V_keep_V, i3* %s_axis_video_V_strb_V, i1* %s_axis_video_V_user_V, i1* %s_axis_video_V_last_V, i1* %s_axis_video_V_id_V, i1* %s_axis_video_V_dest_V)" [src/cpp/rgb2bayer.cpp:27]   --->   Operation 49 'read' 'empty' <Predicate = (!exitcond_flatten)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_data_V_2 = extractvalue { i24, i3, i3, i1, i1, i1, i1 } %empty, 0" [src/cpp/rgb2bayer.cpp:27]   --->   Operation 50 'extractvalue' 'tmp_data_V_2' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_user_V = extractvalue { i24, i3, i3, i1, i1, i1, i1 } %empty, 3" [src/cpp/rgb2bayer.cpp:27]   --->   Operation 51 'extractvalue' 'tmp_user_V' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_last_V = extractvalue { i24, i3, i3, i1, i1, i1, i1 } %empty, 4" [src/cpp/rgb2bayer.cpp:27]   --->   Operation 52 'extractvalue' 'tmp_last_V' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (1.30ns)   --->   "switch i2 %pattern_V_read, label %._crit_edge [
    i2 0, label %_ifconv
    i2 1, label %_ifconv1
    i2 -2, label %_ifconv2
    i2 -1, label %_ifconv3
  ]" [src/cpp/rgb2bayer.cpp:32]   --->   Operation 53 'switch' <Predicate = (!exitcond_flatten)> <Delay = 1.30>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_17 = trunc i24 %tmp_data_V_2 to i8" [src/cpp/rgb2bayer.cpp:132]   --->   Operation 54 'trunc' 'tmp_17' <Predicate = (!exitcond_flatten & pattern_V_read == 3)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node video_o_data_V_3)   --->   "%tmp_18 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %tmp_data_V_2, i32 16, i32 23)" [src/cpp/rgb2bayer.cpp:132]   --->   Operation 55 'partselect' 'tmp_18' <Predicate = (!exitcond_flatten & pattern_V_read == 3)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node video_o_data_V_3)   --->   "%tmp_19 = select i1 %i_cast4_mid2, i8 %tmp_17, i8 %tmp_18" [src/cpp/rgb2bayer.cpp:132]   --->   Operation 56 'select' 'tmp_19' <Predicate = (!exitcond_flatten & pattern_V_read == 3)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node tmp_21)   --->   "%tmp_20 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %tmp_data_V_2, i32 8, i32 15)" [src/cpp/rgb2bayer.cpp:132]   --->   Operation 57 'partselect' 'tmp_20' <Predicate = (!exitcond_flatten & pattern_V_read == 3)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (1.24ns) (out node of the LUT)   --->   "%tmp_21 = select i1 %i_cast4_mid2, i8 %tmp_20, i8 %tmp_17" [src/cpp/rgb2bayer.cpp:121]   --->   Operation 58 'select' 'tmp_21' <Predicate = (!exitcond_flatten & pattern_V_read == 3)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (1.24ns) (out node of the LUT)   --->   "%video_o_data_V_3 = select i1 %tmp_1, i8 %tmp_19, i8 %tmp_21" [src/cpp/rgb2bayer.cpp:132]   --->   Operation 59 'select' 'video_o_data_V_3' <Predicate = (!exitcond_flatten & pattern_V_read == 3)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (1.86ns)   --->   "store i8 %video_o_data_V_3, i8* %tmp_data_V" [src/cpp/rgb2bayer.cpp:123]   --->   Operation 60 'store' <Predicate = (!exitcond_flatten & pattern_V_read == 3)> <Delay = 1.86>
ST_2 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node video_o_data_V_2)   --->   "%tmp_12 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %tmp_data_V_2, i32 16, i32 23)" [src/cpp/rgb2bayer.cpp:105]   --->   Operation 61 'partselect' 'tmp_12' <Predicate = (!exitcond_flatten & pattern_V_read == 2)> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_13 = trunc i24 %tmp_data_V_2 to i8" [src/cpp/rgb2bayer.cpp:105]   --->   Operation 62 'trunc' 'tmp_13' <Predicate = (!exitcond_flatten & pattern_V_read == 2)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node video_o_data_V_2)   --->   "%tmp_14 = select i1 %i_cast4_mid2, i8 %tmp_12, i8 %tmp_13" [src/cpp/rgb2bayer.cpp:105]   --->   Operation 63 'select' 'tmp_14' <Predicate = (!exitcond_flatten & pattern_V_read == 2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node tmp_16)   --->   "%tmp_15 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %tmp_data_V_2, i32 8, i32 15)" [src/cpp/rgb2bayer.cpp:105]   --->   Operation 64 'partselect' 'tmp_15' <Predicate = (!exitcond_flatten & pattern_V_read == 2)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (1.24ns) (out node of the LUT)   --->   "%tmp_16 = select i1 %i_cast4_mid2, i8 %tmp_13, i8 %tmp_15" [src/cpp/rgb2bayer.cpp:94]   --->   Operation 65 'select' 'tmp_16' <Predicate = (!exitcond_flatten & pattern_V_read == 2)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (1.24ns) (out node of the LUT)   --->   "%video_o_data_V_2 = select i1 %tmp_1, i8 %tmp_14, i8 %tmp_16" [src/cpp/rgb2bayer.cpp:105]   --->   Operation 66 'select' 'video_o_data_V_2' <Predicate = (!exitcond_flatten & pattern_V_read == 2)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (1.86ns)   --->   "store i8 %video_o_data_V_2, i8* %tmp_data_V" [src/cpp/rgb2bayer.cpp:96]   --->   Operation 67 'store' <Predicate = (!exitcond_flatten & pattern_V_read == 2)> <Delay = 1.86>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_8 = trunc i24 %tmp_data_V_2 to i8" [src/cpp/rgb2bayer.cpp:78]   --->   Operation 68 'trunc' 'tmp_8' <Predicate = (!exitcond_flatten & pattern_V_read == 1)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node video_o_data_V_1)   --->   "%tmp_9 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %tmp_data_V_2, i32 8, i32 15)" [src/cpp/rgb2bayer.cpp:78]   --->   Operation 69 'partselect' 'tmp_9' <Predicate = (!exitcond_flatten & pattern_V_read == 1)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node video_o_data_V_1)   --->   "%tmp_s = select i1 %i_cast4_mid2, i8 %tmp_8, i8 %tmp_9" [src/cpp/rgb2bayer.cpp:78]   --->   Operation 70 'select' 'tmp_s' <Predicate = (!exitcond_flatten & pattern_V_read == 1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node tmp_11)   --->   "%tmp_10 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %tmp_data_V_2, i32 16, i32 23)" [src/cpp/rgb2bayer.cpp:78]   --->   Operation 71 'partselect' 'tmp_10' <Predicate = (!exitcond_flatten & pattern_V_read == 1)> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (1.24ns) (out node of the LUT)   --->   "%tmp_11 = select i1 %i_cast4_mid2, i8 %tmp_10, i8 %tmp_8" [src/cpp/rgb2bayer.cpp:67]   --->   Operation 72 'select' 'tmp_11' <Predicate = (!exitcond_flatten & pattern_V_read == 1)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (1.24ns) (out node of the LUT)   --->   "%video_o_data_V_1 = select i1 %tmp_1, i8 %tmp_s, i8 %tmp_11" [src/cpp/rgb2bayer.cpp:78]   --->   Operation 73 'select' 'video_o_data_V_1' <Predicate = (!exitcond_flatten & pattern_V_read == 1)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (1.86ns)   --->   "store i8 %video_o_data_V_1, i8* %tmp_data_V" [src/cpp/rgb2bayer.cpp:69]   --->   Operation 74 'store' <Predicate = (!exitcond_flatten & pattern_V_read == 1)> <Delay = 1.86>
ST_2 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node video_o_data_V)   --->   "%tmp = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %tmp_data_V_2, i32 8, i32 15)" [src/cpp/rgb2bayer.cpp:50]   --->   Operation 75 'partselect' 'tmp' <Predicate = (!exitcond_flatten & pattern_V_read == 0)> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_7 = trunc i24 %tmp_data_V_2 to i8" [src/cpp/rgb2bayer.cpp:50]   --->   Operation 76 'trunc' 'tmp_7' <Predicate = (!exitcond_flatten & pattern_V_read == 0)> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node video_o_data_V)   --->   "%tmp_2 = select i1 %i_cast4_mid2, i8 %tmp, i8 %tmp_7" [src/cpp/rgb2bayer.cpp:50]   --->   Operation 77 'select' 'tmp_2' <Predicate = (!exitcond_flatten & pattern_V_read == 0)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node tmp_6)   --->   "%tmp_5 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %tmp_data_V_2, i32 16, i32 23)" [src/cpp/rgb2bayer.cpp:50]   --->   Operation 78 'partselect' 'tmp_5' <Predicate = (!exitcond_flatten & pattern_V_read == 0)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (1.24ns) (out node of the LUT)   --->   "%tmp_6 = select i1 %i_cast4_mid2, i8 %tmp_7, i8 %tmp_5" [src/cpp/rgb2bayer.cpp:37]   --->   Operation 79 'select' 'tmp_6' <Predicate = (!exitcond_flatten & pattern_V_read == 0)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 80 [1/1] (1.24ns) (out node of the LUT)   --->   "%video_o_data_V = select i1 %tmp_1, i8 %tmp_2, i8 %tmp_6" [src/cpp/rgb2bayer.cpp:50]   --->   Operation 80 'select' 'video_o_data_V' <Predicate = (!exitcond_flatten & pattern_V_read == 0)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 81 [1/1] (1.86ns)   --->   "store i8 %video_o_data_V, i8* %tmp_data_V" [src/cpp/rgb2bayer.cpp:40]   --->   Operation 81 'store' <Predicate = (!exitcond_flatten & pattern_V_read == 0)> <Delay = 1.86>
ST_2 : Operation 82 [1/1] (2.52ns)   --->   "%i_op = add i31 %i, 1" [src/cpp/rgb2bayer.cpp:24]   --->   Operation 82 'add' 'i_op' <Predicate = (!exitcond_flatten)> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 83 [1/1] (0.73ns)   --->   "%i_1 = select i1 %tmp_4, i31 %i_op, i31 1" [src/cpp/rgb2bayer.cpp:24]   --->   Operation 83 'select' 'i_1' <Predicate = (!exitcond_flatten)> <Delay = 0.73> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_data_V_3 = load i8* %tmp_data_V" [src/cpp/rgb2bayer.cpp:147]   --->   Operation 84 'load' 'tmp_data_V_3' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_3 : Operation 85 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P.i1P.i1P.i1P.i1P(i8* %m_axis_video_V_data_V, i1* %m_axis_video_V_keep_V, i1* %m_axis_video_V_strb_V, i1* %m_axis_video_V_user_V, i1* %m_axis_video_V_last_V, i1* %m_axis_video_V_id_V, i1* %m_axis_video_V_dest_V, i8 %tmp_data_V_3, i1 undef, i1 undef, i1 %tmp_user_V, i1 %tmp_last_V, i1 undef, i1 undef)" [src/cpp/rgb2bayer.cpp:147]   --->   Operation 85 'write' <Predicate = (!exitcond_flatten)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [src/cpp/rgb2bayer.cpp:23]   --->   Operation 86 'specpipeline' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [src/cpp/rgb2bayer.cpp:23]   --->   Operation 87 'specpipeline' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_4 : Operation 88 [1/1] (0.00ns)   --->   "br label %._crit_edge" [src/cpp/rgb2bayer.cpp:142]   --->   Operation 88 'br' <Predicate = (pattern_V_read == 3)> <Delay = 0.00>
ST_4 : Operation 89 [1/1] (0.00ns)   --->   "br label %._crit_edge" [src/cpp/rgb2bayer.cpp:115]   --->   Operation 89 'br' <Predicate = (pattern_V_read == 2)> <Delay = 0.00>
ST_4 : Operation 90 [1/1] (0.00ns)   --->   "br label %._crit_edge" [src/cpp/rgb2bayer.cpp:88]   --->   Operation 90 'br' <Predicate = (pattern_V_read == 1)> <Delay = 0.00>
ST_4 : Operation 91 [1/1] (0.00ns)   --->   "br label %._crit_edge" [src/cpp/rgb2bayer.cpp:62]   --->   Operation 91 'br' <Predicate = (pattern_V_read == 0)> <Delay = 0.00>
ST_4 : Operation 92 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P.i1P.i1P.i1P.i1P(i8* %m_axis_video_V_data_V, i1* %m_axis_video_V_keep_V, i1* %m_axis_video_V_strb_V, i1* %m_axis_video_V_user_V, i1* %m_axis_video_V_last_V, i1* %m_axis_video_V_id_V, i1* %m_axis_video_V_dest_V, i8 %tmp_data_V_3, i1 undef, i1 undef, i1 %tmp_user_V, i1 %tmp_last_V, i1 undef, i1 undef)" [src/cpp/rgb2bayer.cpp:147]   --->   Operation 92 'write' <Predicate = (!exitcond_flatten)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "br label %1" [src/cpp/rgb2bayer.cpp:24]   --->   Operation 93 'br' <Predicate = (!exitcond_flatten)> <Delay = 0.00>

State 5 <SV = 2> <Delay = 0.00>
ST_5 : Operation 94 [1/1] (0.00ns)   --->   "ret void" [src/cpp/rgb2bayer.cpp:150]   --->   Operation 94 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 8.51ns
The critical path consists of the following:
	wire read on port 'vsize_in' [38]  (0 ns)
	'mul' operation ('bound') [45]  (8.51 ns)

 <State 2>: 7.81ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', src/cpp/rgb2bayer.cpp:24) [50]  (0 ns)
	'icmp' operation ('tmp_4', src/cpp/rgb2bayer.cpp:24) [53]  (2.47 ns)
	'and' operation ('i_cast4_mid2', src/cpp/rgb2bayer.cpp:24) [64]  (0.978 ns)
	'select' operation ('tmp_21', src/cpp/rgb2bayer.cpp:121) [75]  (1.25 ns)
	'select' operation ('video_o.data.V', src/cpp/rgb2bayer.cpp:132) [76]  (1.25 ns)
	'store' operation (src/cpp/rgb2bayer.cpp:123) of variable 'video_o.data.V', src/cpp/rgb2bayer.cpp:132 on local variable 'tmp.data.V' [77]  (1.86 ns)

 <State 3>: 0ns
The critical path consists of the following:

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
