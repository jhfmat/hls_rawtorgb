

================================================================
== Vivado HLS Report for 'rgb2bayer'
================================================================
* Date:           Wed Aug  4 12:46:54 2021

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        rgb2bayer
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.510|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|         3|          1|          1|     ?|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	5  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	2  / true
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.51>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i24* %s_axis_video_V_data_V), !map !60"   --->   Operation 6 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i3* %s_axis_video_V_keep_V), !map !64"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i3* %s_axis_video_V_strb_V), !map !68"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %s_axis_video_V_user_V), !map !72"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %s_axis_video_V_last_V), !map !76"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %s_axis_video_V_id_V), !map !80"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %s_axis_video_V_dest_V), !map !84"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %m_axis_video_V_data_V), !map !88"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_keep_V), !map !92"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_strb_V), !map !96"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_user_V), !map !100"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_last_V), !map !104"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_id_V), !map !108"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_dest_V), !map !112"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %hsize_in), !map !116"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %vsize_in), !map !122"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2 %pattern_V), !map !126"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @rgb2bayer_str) nounwind"   --->   Operation 23 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%vsize_in_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %vsize_in)"   --->   Operation 24 'read' 'vsize_in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%hsize_in_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %hsize_in)"   --->   Operation 25 'read' 'hsize_in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i24* %s_axis_video_V_data_V, i3* %s_axis_video_V_keep_V, i3* %s_axis_video_V_strb_V, i1* %s_axis_video_V_user_V, i1* %s_axis_video_V_last_V, i1* %s_axis_video_V_id_V, i1* %s_axis_video_V_dest_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [src/cpp/rgb2bayer.cpp:7]   --->   Operation 26 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %m_axis_video_V_data_V, i1* %m_axis_video_V_keep_V, i1* %m_axis_video_V_strb_V, i1* %m_axis_video_V_user_V, i1* %m_axis_video_V_last_V, i1* %m_axis_video_V_id_V, i1* %m_axis_video_V_dest_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [src/cpp/rgb2bayer.cpp:8]   --->   Operation 27 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%cast = zext i32 %vsize_in_read to i64"   --->   Operation 28 'zext' 'cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%cast1 = zext i32 %hsize_in_read to i64"   --->   Operation 29 'zext' 'cast1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (8.51ns)   --->   "%bound = mul i64 %cast1, %cast"   --->   Operation 30 'mul' 'bound' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (1.76ns)   --->   "br label %1" [src/cpp/rgb2bayer.cpp:20]   --->   Operation 31 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 5.94>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i64 [ 0, %0 ], [ %indvar_flatten_next, %.reset ]"   --->   Operation 32 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%j = phi i31 [ 0, %0 ], [ %j_cast1_mid2_v, %.reset ]" [src/cpp/rgb2bayer.cpp:20]   --->   Operation 33 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%i = phi i31 [ 0, %0 ], [ %i_1, %.reset ]"   --->   Operation 34 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [src/cpp/rgb2bayer.cpp:22]   --->   Operation 35 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%i_cast = zext i31 %i to i32" [src/cpp/rgb2bayer.cpp:23]   --->   Operation 36 'zext' 'i_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (2.47ns)   --->   "%tmp_3 = icmp slt i32 %i_cast, %hsize_in_read" [src/cpp/rgb2bayer.cpp:23]   --->   Operation 37 'icmp' 'tmp_3' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (2.77ns)   --->   "%exitcond_flatten = icmp eq i64 %indvar_flatten, %bound"   --->   Operation 38 'icmp' 'exitcond_flatten' <Predicate = true> <Delay = 2.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (3.52ns)   --->   "%indvar_flatten_next = add i64 %indvar_flatten, 1"   --->   Operation 39 'add' 'indvar_flatten_next' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "br i1 %exitcond_flatten, label %2, label %.reset"   --->   Operation 40 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (2.52ns)   --->   "%j_s = add i31 1, %j" [src/cpp/rgb2bayer.cpp:20]   --->   Operation 41 'add' 'j_s' <Predicate = (!exitcond_flatten)> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.73ns)   --->   "%j_cast1_mid2_v = select i1 %tmp_3, i31 %j, i31 %j_s" [src/cpp/rgb2bayer.cpp:20]   --->   Operation 42 'select' 'j_cast1_mid2_v' <Predicate = (!exitcond_flatten)> <Delay = 0.73> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%tmp = trunc i31 %j_cast1_mid2_v to i1" [src/cpp/rgb2bayer.cpp:20]   --->   Operation 43 'trunc' 'tmp' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_2 = trunc i31 %i to i1" [src/cpp/rgb2bayer.cpp:23]   --->   Operation 44 'trunc' 'tmp_2' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.97ns)   --->   "%i_cast1_mid2 = and i1 %tmp_3, %tmp_2" [src/cpp/rgb2bayer.cpp:23]   --->   Operation 45 'and' 'i_cast1_mid2' <Predicate = (!exitcond_flatten)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%empty = call { i24, i3, i3, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.i24P.i3P.i3P.i1P.i1P.i1P.i1P(i24* %s_axis_video_V_data_V, i3* %s_axis_video_V_keep_V, i3* %s_axis_video_V_strb_V, i1* %s_axis_video_V_user_V, i1* %s_axis_video_V_last_V, i1* %s_axis_video_V_id_V, i1* %s_axis_video_V_dest_V)" [src/cpp/rgb2bayer.cpp:26]   --->   Operation 46 'read' 'empty' <Predicate = (!exitcond_flatten)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_data_V_1 = extractvalue { i24, i3, i3, i1, i1, i1, i1 } %empty, 0" [src/cpp/rgb2bayer.cpp:26]   --->   Operation 47 'extractvalue' 'tmp_data_V_1' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_user_V = extractvalue { i24, i3, i3, i1, i1, i1, i1 } %empty, 3" [src/cpp/rgb2bayer.cpp:26]   --->   Operation 48 'extractvalue' 'tmp_user_V' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_last_V = extractvalue { i24, i3, i3, i1, i1, i1, i1 } %empty, 4" [src/cpp/rgb2bayer.cpp:26]   --->   Operation 49 'extractvalue' 'tmp_last_V' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node newSel8)   --->   "%p_Result_s = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %tmp_data_V_1, i32 16, i32 23)" [src/cpp/rgb2bayer.cpp:44]   --->   Operation 50 'partselect' 'p_Result_s' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node video_o_data_V)   --->   "%tmp_4 = trunc i24 %tmp_data_V_1 to i8" [src/cpp/rgb2bayer.cpp:49]   --->   Operation 51 'trunc' 'tmp_4' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node newSel8)   --->   "%p_Result_3 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %tmp_data_V_1, i32 8, i32 15)" [src/cpp/rgb2bayer.cpp:62]   --->   Operation 52 'partselect' 'p_Result_3' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node newSel8)   --->   "%tmp_1 = or i1 %tmp, %i_cast1_mid2" [src/cpp/rgb2bayer.cpp:41]   --->   Operation 53 'or' 'tmp_1' <Predicate = (!exitcond_flatten)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node video_o_data_V)   --->   "%or_cond = xor i1 %i_cast1_mid2, %tmp" [src/cpp/rgb2bayer.cpp:62]   --->   Operation 54 'xor' 'or_cond' <Predicate = (!exitcond_flatten)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (1.24ns) (out node of the LUT)   --->   "%newSel8 = select i1 %tmp_1, i8 %p_Result_3, i8 %p_Result_s" [src/cpp/rgb2bayer.cpp:62]   --->   Operation 55 'select' 'newSel8' <Predicate = (!exitcond_flatten)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (1.24ns) (out node of the LUT)   --->   "%video_o_data_V = select i1 %or_cond, i8 %tmp_4, i8 %newSel8" [src/cpp/rgb2bayer.cpp:62]   --->   Operation 56 'select' 'video_o_data_V' <Predicate = (!exitcond_flatten)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (2.52ns)   --->   "%i_op = add i31 1, %i" [src/cpp/rgb2bayer.cpp:23]   --->   Operation 57 'add' 'i_op' <Predicate = (!exitcond_flatten)> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.73ns)   --->   "%i_1 = select i1 %tmp_3, i31 %i_op, i31 1" [src/cpp/rgb2bayer.cpp:23]   --->   Operation 58 'select' 'i_1' <Predicate = (!exitcond_flatten)> <Delay = 0.73> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 59 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P.i1P.i1P.i1P.i1P(i8* %m_axis_video_V_data_V, i1* %m_axis_video_V_keep_V, i1* %m_axis_video_V_strb_V, i1* %m_axis_video_V_user_V, i1* %m_axis_video_V_last_V, i1* %m_axis_video_V_id_V, i1* %m_axis_video_V_dest_V, i8 %video_o_data_V, i1 undef, i1 undef, i1 %tmp_user_V, i1 %tmp_last_V, i1 undef, i1 undef)" [src/cpp/rgb2bayer.cpp:178]   --->   Operation 59 'write' <Predicate = (!exitcond_flatten)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [src/cpp/rgb2bayer.cpp:22]   --->   Operation 60 'specpipeline' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [src/cpp/rgb2bayer.cpp:22]   --->   Operation 61 'specpipeline' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_4 : Operation 62 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P.i1P.i1P.i1P.i1P(i8* %m_axis_video_V_data_V, i1* %m_axis_video_V_keep_V, i1* %m_axis_video_V_strb_V, i1* %m_axis_video_V_user_V, i1* %m_axis_video_V_last_V, i1* %m_axis_video_V_id_V, i1* %m_axis_video_V_dest_V, i8 %video_o_data_V, i1 undef, i1 undef, i1 %tmp_user_V, i1 %tmp_last_V, i1 undef, i1 undef)" [src/cpp/rgb2bayer.cpp:178]   --->   Operation 62 'write' <Predicate = (!exitcond_flatten)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "br label %1" [src/cpp/rgb2bayer.cpp:23]   --->   Operation 63 'br' <Predicate = (!exitcond_flatten)> <Delay = 0.00>

State 5 <SV = 2> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "ret void" [src/cpp/rgb2bayer.cpp:181]   --->   Operation 64 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ s_axis_video_V_data_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=axis:ce=0
Port [ s_axis_video_V_keep_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=axis:ce=0
Port [ s_axis_video_V_strb_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=axis:ce=0
Port [ s_axis_video_V_user_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=axis:ce=0
Port [ s_axis_video_V_last_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=axis:ce=0
Port [ s_axis_video_V_id_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=axis:ce=0
Port [ s_axis_video_V_dest_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=axis:ce=0
Port [ m_axis_video_V_data_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=axis:ce=0
Port [ m_axis_video_V_keep_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=axis:ce=0
Port [ m_axis_video_V_strb_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=axis:ce=0
Port [ m_axis_video_V_user_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=axis:ce=0
Port [ m_axis_video_V_last_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=axis:ce=0
Port [ m_axis_video_V_id_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=axis:ce=0
Port [ m_axis_video_V_dest_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=axis:ce=0
Port [ hsize_in]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ vsize_in]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ pattern_V]:  wired=1; compound=0; hidden=0; nouse=1; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
StgValue_6          (specbitsmap  ) [ 000000]
StgValue_7          (specbitsmap  ) [ 000000]
StgValue_8          (specbitsmap  ) [ 000000]
StgValue_9          (specbitsmap  ) [ 000000]
StgValue_10         (specbitsmap  ) [ 000000]
StgValue_11         (specbitsmap  ) [ 000000]
StgValue_12         (specbitsmap  ) [ 000000]
StgValue_13         (specbitsmap  ) [ 000000]
StgValue_14         (specbitsmap  ) [ 000000]
StgValue_15         (specbitsmap  ) [ 000000]
StgValue_16         (specbitsmap  ) [ 000000]
StgValue_17         (specbitsmap  ) [ 000000]
StgValue_18         (specbitsmap  ) [ 000000]
StgValue_19         (specbitsmap  ) [ 000000]
StgValue_20         (specbitsmap  ) [ 000000]
StgValue_21         (specbitsmap  ) [ 000000]
StgValue_22         (specbitsmap  ) [ 000000]
StgValue_23         (spectopmodule) [ 000000]
vsize_in_read       (read         ) [ 000000]
hsize_in_read       (read         ) [ 001110]
StgValue_26         (specinterface) [ 000000]
StgValue_27         (specinterface) [ 000000]
cast                (zext         ) [ 000000]
cast1               (zext         ) [ 000000]
bound               (mul          ) [ 001110]
StgValue_31         (br           ) [ 011110]
indvar_flatten      (phi          ) [ 001000]
j                   (phi          ) [ 001000]
i                   (phi          ) [ 001000]
StgValue_35         (specpipeline ) [ 000000]
i_cast              (zext         ) [ 000000]
tmp_3               (icmp         ) [ 000000]
exitcond_flatten    (icmp         ) [ 001110]
indvar_flatten_next (add          ) [ 011110]
StgValue_40         (br           ) [ 000000]
j_s                 (add          ) [ 000000]
j_cast1_mid2_v      (select       ) [ 011110]
tmp                 (trunc        ) [ 000000]
tmp_2               (trunc        ) [ 000000]
i_cast1_mid2        (and          ) [ 000000]
empty               (read         ) [ 000000]
tmp_data_V_1        (extractvalue ) [ 000000]
tmp_user_V          (extractvalue ) [ 001110]
tmp_last_V          (extractvalue ) [ 001110]
p_Result_s          (partselect   ) [ 000000]
tmp_4               (trunc        ) [ 000000]
p_Result_3          (partselect   ) [ 000000]
tmp_1               (or           ) [ 000000]
or_cond             (xor          ) [ 000000]
newSel8             (select       ) [ 000000]
video_o_data_V      (select       ) [ 001110]
i_op                (add          ) [ 000000]
i_1                 (select       ) [ 011110]
StgValue_60         (specpipeline ) [ 000000]
StgValue_61         (specpipeline ) [ 000000]
StgValue_62         (write        ) [ 000000]
StgValue_63         (br           ) [ 011110]
StgValue_64         (ret          ) [ 000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="s_axis_video_V_data_V">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="s_axis_video_V_data_V"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="s_axis_video_V_keep_V">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="s_axis_video_V_keep_V"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="s_axis_video_V_strb_V">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="s_axis_video_V_strb_V"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="s_axis_video_V_user_V">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="s_axis_video_V_user_V"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="s_axis_video_V_last_V">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="s_axis_video_V_last_V"/></StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="s_axis_video_V_id_V">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="s_axis_video_V_id_V"/></StgValue>
</bind>
</comp>

<comp id="12" class="1000" name="s_axis_video_V_dest_V">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="s_axis_video_V_dest_V"/></StgValue>
</bind>
</comp>

<comp id="14" class="1000" name="m_axis_video_V_data_V">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="m_axis_video_V_data_V"/></StgValue>
</bind>
</comp>

<comp id="16" class="1000" name="m_axis_video_V_keep_V">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="m_axis_video_V_keep_V"/></StgValue>
</bind>
</comp>

<comp id="18" class="1000" name="m_axis_video_V_strb_V">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="m_axis_video_V_strb_V"/></StgValue>
</bind>
</comp>

<comp id="20" class="1000" name="m_axis_video_V_user_V">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="m_axis_video_V_user_V"/></StgValue>
</bind>
</comp>

<comp id="22" class="1000" name="m_axis_video_V_last_V">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="m_axis_video_V_last_V"/></StgValue>
</bind>
</comp>

<comp id="24" class="1000" name="m_axis_video_V_id_V">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="m_axis_video_V_id_V"/></StgValue>
</bind>
</comp>

<comp id="26" class="1000" name="m_axis_video_V_dest_V">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="m_axis_video_V_dest_V"/></StgValue>
</bind>
</comp>

<comp id="28" class="1000" name="hsize_in">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="hsize_in"/></StgValue>
</bind>
</comp>

<comp id="30" class="1000" name="vsize_in">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="vsize_in"/></StgValue>
</bind>
</comp>

<comp id="32" class="1000" name="pattern_V">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="pattern_V"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="rgb2bayer_str"/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i32"/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecPipeline"/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="66" class="1001" name="const_66">
<pin_list>
<pin id="67" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.axis.volatile.i24P.i3P.i3P.i1P.i1P.i1P.i1P"/></StgValue>
</bind>
</comp>

<comp id="68" class="1001" name="const_68">
<pin_list>
<pin id="69" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i8.i24.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="70" class="1001" name="const_70">
<pin_list>
<pin id="71" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="72" class="1001" name="const_72">
<pin_list>
<pin id="73" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="74" class="1001" name="const_74">
<pin_list>
<pin id="75" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="76" class="1001" name="const_76">
<pin_list>
<pin id="77" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="78" class="1001" name="const_78">
<pin_list>
<pin id="79" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.axis.volatile.i8P.i1P.i1P.i1P.i1P.i1P.i1P"/></StgValue>
</bind>
</comp>

<comp id="80" class="1001" name="const_80">
<pin_list>
<pin id="81" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="82" class="1004" name="vsize_in_read_read_fu_82">
<pin_list>
<pin id="83" dir="0" index="0" bw="32" slack="0"/>
<pin id="84" dir="0" index="1" bw="32" slack="0"/>
<pin id="85" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="vsize_in_read/1 "/>
</bind>
</comp>

<comp id="88" class="1004" name="hsize_in_read_read_fu_88">
<pin_list>
<pin id="89" dir="0" index="0" bw="32" slack="0"/>
<pin id="90" dir="0" index="1" bw="32" slack="0"/>
<pin id="91" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="hsize_in_read/1 "/>
</bind>
</comp>

<comp id="94" class="1004" name="empty_read_fu_94">
<pin_list>
<pin id="95" dir="0" index="0" bw="34" slack="0"/>
<pin id="96" dir="0" index="1" bw="24" slack="0"/>
<pin id="97" dir="0" index="2" bw="3" slack="0"/>
<pin id="98" dir="0" index="3" bw="3" slack="0"/>
<pin id="99" dir="0" index="4" bw="1" slack="0"/>
<pin id="100" dir="0" index="5" bw="1" slack="0"/>
<pin id="101" dir="0" index="6" bw="1" slack="0"/>
<pin id="102" dir="0" index="7" bw="1" slack="0"/>
<pin id="103" dir="1" index="8" bw="34" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="empty/2 "/>
</bind>
</comp>

<comp id="112" class="1004" name="grp_write_fu_112">
<pin_list>
<pin id="113" dir="0" index="0" bw="0" slack="0"/>
<pin id="114" dir="0" index="1" bw="8" slack="0"/>
<pin id="115" dir="0" index="2" bw="1" slack="0"/>
<pin id="116" dir="0" index="3" bw="1" slack="0"/>
<pin id="117" dir="0" index="4" bw="1" slack="0"/>
<pin id="118" dir="0" index="5" bw="1" slack="0"/>
<pin id="119" dir="0" index="6" bw="1" slack="0"/>
<pin id="120" dir="0" index="7" bw="1" slack="0"/>
<pin id="121" dir="0" index="8" bw="8" slack="1"/>
<pin id="122" dir="0" index="9" bw="1" slack="0"/>
<pin id="123" dir="0" index="10" bw="1" slack="0"/>
<pin id="124" dir="0" index="11" bw="1" slack="1"/>
<pin id="125" dir="0" index="12" bw="1" slack="1"/>
<pin id="126" dir="0" index="13" bw="1" slack="0"/>
<pin id="127" dir="0" index="14" bw="1" slack="0"/>
<pin id="128" dir="1" index="15" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_59/3 "/>
</bind>
</comp>

<comp id="141" class="1005" name="indvar_flatten_reg_141">
<pin_list>
<pin id="142" dir="0" index="0" bw="64" slack="1"/>
<pin id="143" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="indvar_flatten (phireg) "/>
</bind>
</comp>

<comp id="145" class="1004" name="indvar_flatten_phi_fu_145">
<pin_list>
<pin id="146" dir="0" index="0" bw="1" slack="1"/>
<pin id="147" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="148" dir="0" index="2" bw="64" slack="0"/>
<pin id="149" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="150" dir="1" index="4" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="indvar_flatten/2 "/>
</bind>
</comp>

<comp id="152" class="1005" name="j_reg_152">
<pin_list>
<pin id="153" dir="0" index="0" bw="31" slack="1"/>
<pin id="154" dir="1" index="1" bw="31" slack="1"/>
</pin_list>
<bind>
<opset="j (phireg) "/>
</bind>
</comp>

<comp id="156" class="1004" name="j_phi_fu_156">
<pin_list>
<pin id="157" dir="0" index="0" bw="1" slack="1"/>
<pin id="158" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="159" dir="0" index="2" bw="31" slack="0"/>
<pin id="160" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="161" dir="1" index="4" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="j/2 "/>
</bind>
</comp>

<comp id="163" class="1005" name="i_reg_163">
<pin_list>
<pin id="164" dir="0" index="0" bw="31" slack="1"/>
<pin id="165" dir="1" index="1" bw="31" slack="1"/>
</pin_list>
<bind>
<opset="i (phireg) "/>
</bind>
</comp>

<comp id="167" class="1004" name="i_phi_fu_167">
<pin_list>
<pin id="168" dir="0" index="0" bw="1" slack="1"/>
<pin id="169" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="170" dir="0" index="2" bw="31" slack="0"/>
<pin id="171" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="172" dir="1" index="4" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="i/2 "/>
</bind>
</comp>

<comp id="174" class="1004" name="cast_fu_174">
<pin_list>
<pin id="175" dir="0" index="0" bw="32" slack="0"/>
<pin id="176" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="cast/1 "/>
</bind>
</comp>

<comp id="178" class="1004" name="cast1_fu_178">
<pin_list>
<pin id="179" dir="0" index="0" bw="32" slack="0"/>
<pin id="180" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="cast1/1 "/>
</bind>
</comp>

<comp id="182" class="1004" name="bound_fu_182">
<pin_list>
<pin id="183" dir="0" index="0" bw="32" slack="0"/>
<pin id="184" dir="0" index="1" bw="32" slack="0"/>
<pin id="185" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="mul(12) " fcode="mul"/>
<opset="bound/1 "/>
</bind>
</comp>

<comp id="188" class="1004" name="i_cast_fu_188">
<pin_list>
<pin id="189" dir="0" index="0" bw="31" slack="0"/>
<pin id="190" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="i_cast/2 "/>
</bind>
</comp>

<comp id="192" class="1004" name="tmp_3_fu_192">
<pin_list>
<pin id="193" dir="0" index="0" bw="31" slack="0"/>
<pin id="194" dir="0" index="1" bw="32" slack="1"/>
<pin id="195" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="tmp_3/2 "/>
</bind>
</comp>

<comp id="197" class="1004" name="exitcond_flatten_fu_197">
<pin_list>
<pin id="198" dir="0" index="0" bw="64" slack="0"/>
<pin id="199" dir="0" index="1" bw="64" slack="1"/>
<pin id="200" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="exitcond_flatten/2 "/>
</bind>
</comp>

<comp id="202" class="1004" name="indvar_flatten_next_fu_202">
<pin_list>
<pin id="203" dir="0" index="0" bw="64" slack="0"/>
<pin id="204" dir="0" index="1" bw="1" slack="0"/>
<pin id="205" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="indvar_flatten_next/2 "/>
</bind>
</comp>

<comp id="208" class="1004" name="j_s_fu_208">
<pin_list>
<pin id="209" dir="0" index="0" bw="1" slack="0"/>
<pin id="210" dir="0" index="1" bw="31" slack="0"/>
<pin id="211" dir="1" index="2" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="j_s/2 "/>
</bind>
</comp>

<comp id="214" class="1004" name="j_cast1_mid2_v_fu_214">
<pin_list>
<pin id="215" dir="0" index="0" bw="1" slack="0"/>
<pin id="216" dir="0" index="1" bw="31" slack="0"/>
<pin id="217" dir="0" index="2" bw="31" slack="0"/>
<pin id="218" dir="1" index="3" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="j_cast1_mid2_v/2 "/>
</bind>
</comp>

<comp id="222" class="1004" name="tmp_fu_222">
<pin_list>
<pin id="223" dir="0" index="0" bw="31" slack="0"/>
<pin id="224" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="tmp/2 "/>
</bind>
</comp>

<comp id="226" class="1004" name="tmp_2_fu_226">
<pin_list>
<pin id="227" dir="0" index="0" bw="31" slack="0"/>
<pin id="228" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="tmp_2/2 "/>
</bind>
</comp>

<comp id="230" class="1004" name="i_cast1_mid2_fu_230">
<pin_list>
<pin id="231" dir="0" index="0" bw="1" slack="0"/>
<pin id="232" dir="0" index="1" bw="1" slack="0"/>
<pin id="233" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="i_cast1_mid2/2 "/>
</bind>
</comp>

<comp id="236" class="1004" name="tmp_data_V_1_fu_236">
<pin_list>
<pin id="237" dir="0" index="0" bw="34" slack="0"/>
<pin id="238" dir="1" index="1" bw="24" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="tmp_data_V_1/2 "/>
</bind>
</comp>

<comp id="240" class="1004" name="tmp_user_V_fu_240">
<pin_list>
<pin id="241" dir="0" index="0" bw="34" slack="0"/>
<pin id="242" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="tmp_user_V/2 "/>
</bind>
</comp>

<comp id="244" class="1004" name="tmp_last_V_fu_244">
<pin_list>
<pin id="245" dir="0" index="0" bw="34" slack="0"/>
<pin id="246" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="tmp_last_V/2 "/>
</bind>
</comp>

<comp id="248" class="1004" name="p_Result_s_fu_248">
<pin_list>
<pin id="249" dir="0" index="0" bw="8" slack="0"/>
<pin id="250" dir="0" index="1" bw="24" slack="0"/>
<pin id="251" dir="0" index="2" bw="6" slack="0"/>
<pin id="252" dir="0" index="3" bw="6" slack="0"/>
<pin id="253" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="p_Result_s/2 "/>
</bind>
</comp>

<comp id="258" class="1004" name="tmp_4_fu_258">
<pin_list>
<pin id="259" dir="0" index="0" bw="24" slack="0"/>
<pin id="260" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="tmp_4/2 "/>
</bind>
</comp>

<comp id="262" class="1004" name="p_Result_3_fu_262">
<pin_list>
<pin id="263" dir="0" index="0" bw="8" slack="0"/>
<pin id="264" dir="0" index="1" bw="24" slack="0"/>
<pin id="265" dir="0" index="2" bw="5" slack="0"/>
<pin id="266" dir="0" index="3" bw="5" slack="0"/>
<pin id="267" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="p_Result_3/2 "/>
</bind>
</comp>

<comp id="272" class="1004" name="tmp_1_fu_272">
<pin_list>
<pin id="273" dir="0" index="0" bw="1" slack="0"/>
<pin id="274" dir="0" index="1" bw="1" slack="0"/>
<pin id="275" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="tmp_1/2 "/>
</bind>
</comp>

<comp id="278" class="1004" name="or_cond_fu_278">
<pin_list>
<pin id="279" dir="0" index="0" bw="1" slack="0"/>
<pin id="280" dir="0" index="1" bw="1" slack="0"/>
<pin id="281" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="or_cond/2 "/>
</bind>
</comp>

<comp id="284" class="1004" name="newSel8_fu_284">
<pin_list>
<pin id="285" dir="0" index="0" bw="1" slack="0"/>
<pin id="286" dir="0" index="1" bw="8" slack="0"/>
<pin id="287" dir="0" index="2" bw="8" slack="0"/>
<pin id="288" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="newSel8/2 "/>
</bind>
</comp>

<comp id="292" class="1004" name="video_o_data_V_fu_292">
<pin_list>
<pin id="293" dir="0" index="0" bw="1" slack="0"/>
<pin id="294" dir="0" index="1" bw="8" slack="0"/>
<pin id="295" dir="0" index="2" bw="8" slack="0"/>
<pin id="296" dir="1" index="3" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="video_o_data_V/2 "/>
</bind>
</comp>

<comp id="300" class="1004" name="i_op_fu_300">
<pin_list>
<pin id="301" dir="0" index="0" bw="1" slack="0"/>
<pin id="302" dir="0" index="1" bw="31" slack="0"/>
<pin id="303" dir="1" index="2" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="i_op/2 "/>
</bind>
</comp>

<comp id="306" class="1004" name="i_1_fu_306">
<pin_list>
<pin id="307" dir="0" index="0" bw="1" slack="0"/>
<pin id="308" dir="0" index="1" bw="31" slack="0"/>
<pin id="309" dir="0" index="2" bw="1" slack="0"/>
<pin id="310" dir="1" index="3" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="i_1/2 "/>
</bind>
</comp>

<comp id="314" class="1005" name="hsize_in_read_reg_314">
<pin_list>
<pin id="315" dir="0" index="0" bw="32" slack="1"/>
<pin id="316" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="hsize_in_read "/>
</bind>
</comp>

<comp id="319" class="1005" name="bound_reg_319">
<pin_list>
<pin id="320" dir="0" index="0" bw="64" slack="1"/>
<pin id="321" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="bound "/>
</bind>
</comp>

<comp id="324" class="1005" name="exitcond_flatten_reg_324">
<pin_list>
<pin id="325" dir="0" index="0" bw="1" slack="1"/>
<pin id="326" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="exitcond_flatten "/>
</bind>
</comp>

<comp id="328" class="1005" name="indvar_flatten_next_reg_328">
<pin_list>
<pin id="329" dir="0" index="0" bw="64" slack="0"/>
<pin id="330" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opset="indvar_flatten_next "/>
</bind>
</comp>

<comp id="333" class="1005" name="j_cast1_mid2_v_reg_333">
<pin_list>
<pin id="334" dir="0" index="0" bw="31" slack="0"/>
<pin id="335" dir="1" index="1" bw="31" slack="0"/>
</pin_list>
<bind>
<opset="j_cast1_mid2_v "/>
</bind>
</comp>

<comp id="338" class="1005" name="tmp_user_V_reg_338">
<pin_list>
<pin id="339" dir="0" index="0" bw="1" slack="1"/>
<pin id="340" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="tmp_user_V "/>
</bind>
</comp>

<comp id="343" class="1005" name="tmp_last_V_reg_343">
<pin_list>
<pin id="344" dir="0" index="0" bw="1" slack="1"/>
<pin id="345" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="tmp_last_V "/>
</bind>
</comp>

<comp id="348" class="1005" name="video_o_data_V_reg_348">
<pin_list>
<pin id="349" dir="0" index="0" bw="8" slack="1"/>
<pin id="350" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="video_o_data_V "/>
</bind>
</comp>

<comp id="353" class="1005" name="i_1_reg_353">
<pin_list>
<pin id="354" dir="0" index="0" bw="31" slack="0"/>
<pin id="355" dir="1" index="1" bw="31" slack="0"/>
</pin_list>
<bind>
<opset="i_1 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="86"><net_src comp="40" pin="0"/><net_sink comp="82" pin=0"/></net>

<net id="87"><net_src comp="30" pin="0"/><net_sink comp="82" pin=1"/></net>

<net id="92"><net_src comp="40" pin="0"/><net_sink comp="88" pin=0"/></net>

<net id="93"><net_src comp="28" pin="0"/><net_sink comp="88" pin=1"/></net>

<net id="104"><net_src comp="66" pin="0"/><net_sink comp="94" pin=0"/></net>

<net id="105"><net_src comp="0" pin="0"/><net_sink comp="94" pin=1"/></net>

<net id="106"><net_src comp="2" pin="0"/><net_sink comp="94" pin=2"/></net>

<net id="107"><net_src comp="4" pin="0"/><net_sink comp="94" pin=3"/></net>

<net id="108"><net_src comp="6" pin="0"/><net_sink comp="94" pin=4"/></net>

<net id="109"><net_src comp="8" pin="0"/><net_sink comp="94" pin=5"/></net>

<net id="110"><net_src comp="10" pin="0"/><net_sink comp="94" pin=6"/></net>

<net id="111"><net_src comp="12" pin="0"/><net_sink comp="94" pin=7"/></net>

<net id="129"><net_src comp="78" pin="0"/><net_sink comp="112" pin=0"/></net>

<net id="130"><net_src comp="14" pin="0"/><net_sink comp="112" pin=1"/></net>

<net id="131"><net_src comp="16" pin="0"/><net_sink comp="112" pin=2"/></net>

<net id="132"><net_src comp="18" pin="0"/><net_sink comp="112" pin=3"/></net>

<net id="133"><net_src comp="20" pin="0"/><net_sink comp="112" pin=4"/></net>

<net id="134"><net_src comp="22" pin="0"/><net_sink comp="112" pin=5"/></net>

<net id="135"><net_src comp="24" pin="0"/><net_sink comp="112" pin=6"/></net>

<net id="136"><net_src comp="26" pin="0"/><net_sink comp="112" pin=7"/></net>

<net id="137"><net_src comp="80" pin="0"/><net_sink comp="112" pin=9"/></net>

<net id="138"><net_src comp="80" pin="0"/><net_sink comp="112" pin=10"/></net>

<net id="139"><net_src comp="80" pin="0"/><net_sink comp="112" pin=13"/></net>

<net id="140"><net_src comp="80" pin="0"/><net_sink comp="112" pin=14"/></net>

<net id="144"><net_src comp="54" pin="0"/><net_sink comp="141" pin=0"/></net>

<net id="151"><net_src comp="141" pin="1"/><net_sink comp="145" pin=0"/></net>

<net id="155"><net_src comp="56" pin="0"/><net_sink comp="152" pin=0"/></net>

<net id="162"><net_src comp="152" pin="1"/><net_sink comp="156" pin=0"/></net>

<net id="166"><net_src comp="56" pin="0"/><net_sink comp="163" pin=0"/></net>

<net id="173"><net_src comp="163" pin="1"/><net_sink comp="167" pin=0"/></net>

<net id="177"><net_src comp="82" pin="2"/><net_sink comp="174" pin=0"/></net>

<net id="181"><net_src comp="88" pin="2"/><net_sink comp="178" pin=0"/></net>

<net id="186"><net_src comp="178" pin="1"/><net_sink comp="182" pin=0"/></net>

<net id="187"><net_src comp="174" pin="1"/><net_sink comp="182" pin=1"/></net>

<net id="191"><net_src comp="167" pin="4"/><net_sink comp="188" pin=0"/></net>

<net id="196"><net_src comp="188" pin="1"/><net_sink comp="192" pin=0"/></net>

<net id="201"><net_src comp="145" pin="4"/><net_sink comp="197" pin=0"/></net>

<net id="206"><net_src comp="145" pin="4"/><net_sink comp="202" pin=0"/></net>

<net id="207"><net_src comp="62" pin="0"/><net_sink comp="202" pin=1"/></net>

<net id="212"><net_src comp="64" pin="0"/><net_sink comp="208" pin=0"/></net>

<net id="213"><net_src comp="156" pin="4"/><net_sink comp="208" pin=1"/></net>

<net id="219"><net_src comp="192" pin="2"/><net_sink comp="214" pin=0"/></net>

<net id="220"><net_src comp="156" pin="4"/><net_sink comp="214" pin=1"/></net>

<net id="221"><net_src comp="208" pin="2"/><net_sink comp="214" pin=2"/></net>

<net id="225"><net_src comp="214" pin="3"/><net_sink comp="222" pin=0"/></net>

<net id="229"><net_src comp="167" pin="4"/><net_sink comp="226" pin=0"/></net>

<net id="234"><net_src comp="192" pin="2"/><net_sink comp="230" pin=0"/></net>

<net id="235"><net_src comp="226" pin="1"/><net_sink comp="230" pin=1"/></net>

<net id="239"><net_src comp="94" pin="8"/><net_sink comp="236" pin=0"/></net>

<net id="243"><net_src comp="94" pin="8"/><net_sink comp="240" pin=0"/></net>

<net id="247"><net_src comp="94" pin="8"/><net_sink comp="244" pin=0"/></net>

<net id="254"><net_src comp="68" pin="0"/><net_sink comp="248" pin=0"/></net>

<net id="255"><net_src comp="236" pin="1"/><net_sink comp="248" pin=1"/></net>

<net id="256"><net_src comp="70" pin="0"/><net_sink comp="248" pin=2"/></net>

<net id="257"><net_src comp="72" pin="0"/><net_sink comp="248" pin=3"/></net>

<net id="261"><net_src comp="236" pin="1"/><net_sink comp="258" pin=0"/></net>

<net id="268"><net_src comp="68" pin="0"/><net_sink comp="262" pin=0"/></net>

<net id="269"><net_src comp="236" pin="1"/><net_sink comp="262" pin=1"/></net>

<net id="270"><net_src comp="74" pin="0"/><net_sink comp="262" pin=2"/></net>

<net id="271"><net_src comp="76" pin="0"/><net_sink comp="262" pin=3"/></net>

<net id="276"><net_src comp="222" pin="1"/><net_sink comp="272" pin=0"/></net>

<net id="277"><net_src comp="230" pin="2"/><net_sink comp="272" pin=1"/></net>

<net id="282"><net_src comp="230" pin="2"/><net_sink comp="278" pin=0"/></net>

<net id="283"><net_src comp="222" pin="1"/><net_sink comp="278" pin=1"/></net>

<net id="289"><net_src comp="272" pin="2"/><net_sink comp="284" pin=0"/></net>

<net id="290"><net_src comp="262" pin="4"/><net_sink comp="284" pin=1"/></net>

<net id="291"><net_src comp="248" pin="4"/><net_sink comp="284" pin=2"/></net>

<net id="297"><net_src comp="278" pin="2"/><net_sink comp="292" pin=0"/></net>

<net id="298"><net_src comp="258" pin="1"/><net_sink comp="292" pin=1"/></net>

<net id="299"><net_src comp="284" pin="3"/><net_sink comp="292" pin=2"/></net>

<net id="304"><net_src comp="64" pin="0"/><net_sink comp="300" pin=0"/></net>

<net id="305"><net_src comp="167" pin="4"/><net_sink comp="300" pin=1"/></net>

<net id="311"><net_src comp="192" pin="2"/><net_sink comp="306" pin=0"/></net>

<net id="312"><net_src comp="300" pin="2"/><net_sink comp="306" pin=1"/></net>

<net id="313"><net_src comp="64" pin="0"/><net_sink comp="306" pin=2"/></net>

<net id="317"><net_src comp="88" pin="2"/><net_sink comp="314" pin=0"/></net>

<net id="318"><net_src comp="314" pin="1"/><net_sink comp="192" pin=1"/></net>

<net id="322"><net_src comp="182" pin="2"/><net_sink comp="319" pin=0"/></net>

<net id="323"><net_src comp="319" pin="1"/><net_sink comp="197" pin=1"/></net>

<net id="327"><net_src comp="197" pin="2"/><net_sink comp="324" pin=0"/></net>

<net id="331"><net_src comp="202" pin="2"/><net_sink comp="328" pin=0"/></net>

<net id="332"><net_src comp="328" pin="1"/><net_sink comp="145" pin=2"/></net>

<net id="336"><net_src comp="214" pin="3"/><net_sink comp="333" pin=0"/></net>

<net id="337"><net_src comp="333" pin="1"/><net_sink comp="156" pin=2"/></net>

<net id="341"><net_src comp="240" pin="1"/><net_sink comp="338" pin=0"/></net>

<net id="342"><net_src comp="338" pin="1"/><net_sink comp="112" pin=11"/></net>

<net id="346"><net_src comp="244" pin="1"/><net_sink comp="343" pin=0"/></net>

<net id="347"><net_src comp="343" pin="1"/><net_sink comp="112" pin=12"/></net>

<net id="351"><net_src comp="292" pin="3"/><net_sink comp="348" pin=0"/></net>

<net id="352"><net_src comp="348" pin="1"/><net_sink comp="112" pin=8"/></net>

<net id="356"><net_src comp="306" pin="3"/><net_sink comp="353" pin=0"/></net>

<net id="357"><net_src comp="353" pin="1"/><net_sink comp="167" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: m_axis_video_V_data_V | {4 }
	Port: m_axis_video_V_keep_V | {4 }
	Port: m_axis_video_V_strb_V | {4 }
	Port: m_axis_video_V_user_V | {4 }
	Port: m_axis_video_V_last_V | {4 }
	Port: m_axis_video_V_id_V | {4 }
	Port: m_axis_video_V_dest_V | {4 }
 - Input state : 
	Port: rgb2bayer : s_axis_video_V_data_V | {2 }
	Port: rgb2bayer : s_axis_video_V_keep_V | {2 }
	Port: rgb2bayer : s_axis_video_V_strb_V | {2 }
	Port: rgb2bayer : s_axis_video_V_user_V | {2 }
	Port: rgb2bayer : s_axis_video_V_last_V | {2 }
	Port: rgb2bayer : s_axis_video_V_id_V | {2 }
	Port: rgb2bayer : s_axis_video_V_dest_V | {2 }
	Port: rgb2bayer : hsize_in | {1 }
	Port: rgb2bayer : vsize_in | {1 }
  - Chain level:
	State 1
		bound : 1
	State 2
		i_cast : 1
		tmp_3 : 2
		exitcond_flatten : 1
		indvar_flatten_next : 1
		StgValue_40 : 2
		j_s : 1
		j_cast1_mid2_v : 3
		tmp : 4
		tmp_2 : 1
		i_cast1_mid2 : 3
		p_Result_s : 1
		tmp_4 : 1
		p_Result_3 : 1
		tmp_1 : 5
		or_cond : 5
		newSel8 : 5
		video_o_data_V : 6
		i_op : 1
		i_1 : 3
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|----------------------------|---------|---------|---------|
| Operation|       Functional Unit      |  DSP48E |    FF   |   LUT   |
|----------|----------------------------|---------|---------|---------|
|          | indvar_flatten_next_fu_202 |    0    |    0    |    71   |
|    add   |         j_s_fu_208         |    0    |    0    |    38   |
|          |         i_op_fu_300        |    0    |    0    |    38   |
|----------|----------------------------|---------|---------|---------|
|          |    j_cast1_mid2_v_fu_214   |    0    |    0    |    31   |
|  select  |       newSel8_fu_284       |    0    |    0    |    8    |
|          |    video_o_data_V_fu_292   |    0    |    0    |    8    |
|          |         i_1_fu_306         |    0    |    0    |    31   |
|----------|----------------------------|---------|---------|---------|
|   icmp   |        tmp_3_fu_192        |    0    |    0    |    18   |
|          |   exitcond_flatten_fu_197  |    0    |    0    |    29   |
|----------|----------------------------|---------|---------|---------|
|    mul   |        bound_fu_182        |    4    |    0    |    20   |
|----------|----------------------------|---------|---------|---------|
|    and   |     i_cast1_mid2_fu_230    |    0    |    0    |    2    |
|----------|----------------------------|---------|---------|---------|
|    or    |        tmp_1_fu_272        |    0    |    0    |    2    |
|----------|----------------------------|---------|---------|---------|
|    xor   |       or_cond_fu_278       |    0    |    0    |    2    |
|----------|----------------------------|---------|---------|---------|
|          |  vsize_in_read_read_fu_82  |    0    |    0    |    0    |
|   read   |  hsize_in_read_read_fu_88  |    0    |    0    |    0    |
|          |      empty_read_fu_94      |    0    |    0    |    0    |
|----------|----------------------------|---------|---------|---------|
|   write  |      grp_write_fu_112      |    0    |    0    |    0    |
|----------|----------------------------|---------|---------|---------|
|          |         cast_fu_174        |    0    |    0    |    0    |
|   zext   |        cast1_fu_178        |    0    |    0    |    0    |
|          |        i_cast_fu_188       |    0    |    0    |    0    |
|----------|----------------------------|---------|---------|---------|
|          |         tmp_fu_222         |    0    |    0    |    0    |
|   trunc  |        tmp_2_fu_226        |    0    |    0    |    0    |
|          |        tmp_4_fu_258        |    0    |    0    |    0    |
|----------|----------------------------|---------|---------|---------|
|          |     tmp_data_V_1_fu_236    |    0    |    0    |    0    |
|extractvalue|      tmp_user_V_fu_240     |    0    |    0    |    0    |
|          |      tmp_last_V_fu_244     |    0    |    0    |    0    |
|----------|----------------------------|---------|---------|---------|
|partselect|      p_Result_s_fu_248     |    0    |    0    |    0    |
|          |      p_Result_3_fu_262     |    0    |    0    |    0    |
|----------|----------------------------|---------|---------|---------|
|   Total  |                            |    4    |    0    |   298   |
|----------|----------------------------|---------|---------|---------|

Memories:
N/A

* Register list:
+---------------------------+--------+
|                           |   FF   |
+---------------------------+--------+
|       bound_reg_319       |   64   |
|  exitcond_flatten_reg_324 |    1   |
|   hsize_in_read_reg_314   |   32   |
|        i_1_reg_353        |   31   |
|         i_reg_163         |   31   |
|indvar_flatten_next_reg_328|   64   |
|   indvar_flatten_reg_141  |   64   |
|   j_cast1_mid2_v_reg_333  |   31   |
|         j_reg_152         |   31   |
|     tmp_last_V_reg_343    |    1   |
|     tmp_user_V_reg_338    |    1   |
|   video_o_data_V_reg_348  |    8   |
+---------------------------+--------+
|           Total           |   359  |
+---------------------------+--------+

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+--------+--------+--------+
|           | DSP48E |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    4   |    0   |   298  |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|    -   |    -   |    -   |
|  Register |    -   |   359  |    -   |
+-----------+--------+--------+--------+
|   Total   |    4   |   359  |   298  |
+-----------+--------+--------+--------+
