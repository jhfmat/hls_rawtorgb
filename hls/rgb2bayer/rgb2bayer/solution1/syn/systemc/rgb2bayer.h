// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _rgb2bayer_HH_
#define _rgb2bayer_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct rgb2bayer : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<24> > s_axis_video_TDATA;
    sc_in< sc_logic > s_axis_video_TVALID;
    sc_out< sc_logic > s_axis_video_TREADY;
    sc_in< sc_lv<3> > s_axis_video_TKEEP;
    sc_in< sc_lv<3> > s_axis_video_TSTRB;
    sc_in< sc_lv<1> > s_axis_video_TUSER;
    sc_in< sc_lv<1> > s_axis_video_TLAST;
    sc_in< sc_lv<1> > s_axis_video_TID;
    sc_in< sc_lv<1> > s_axis_video_TDEST;
    sc_out< sc_lv<8> > m_axis_video_TDATA;
    sc_out< sc_logic > m_axis_video_TVALID;
    sc_in< sc_logic > m_axis_video_TREADY;
    sc_out< sc_lv<1> > m_axis_video_TKEEP;
    sc_out< sc_lv<1> > m_axis_video_TSTRB;
    sc_out< sc_lv<1> > m_axis_video_TUSER;
    sc_out< sc_lv<1> > m_axis_video_TLAST;
    sc_out< sc_lv<1> > m_axis_video_TID;
    sc_out< sc_lv<1> > m_axis_video_TDEST;
    sc_in< sc_lv<32> > hsize_in;
    sc_in< sc_lv<32> > vsize_in;
    sc_in< sc_lv<2> > pattern_V;


    // Module declarations
    rgb2bayer(sc_module_name name);
    SC_HAS_PROCESS(rgb2bayer);

    ~rgb2bayer();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<24> > s_axis_video_V_data_V_0_data_out;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_vld_in;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_vld_out;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_ack_in;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_ack_out;
    sc_signal< sc_lv<24> > s_axis_video_V_data_V_0_payload_A;
    sc_signal< sc_lv<24> > s_axis_video_V_data_V_0_payload_B;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_sel_rd;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_sel_wr;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_sel;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_load_A;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > s_axis_video_V_data_V_0_state;
    sc_signal< sc_logic > s_axis_video_V_data_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > s_axis_video_V_user_V_0_data_out;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_vld_in;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_vld_out;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_ack_in;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_ack_out;
    sc_signal< sc_lv<1> > s_axis_video_V_user_V_0_payload_A;
    sc_signal< sc_lv<1> > s_axis_video_V_user_V_0_payload_B;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_sel_rd;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_sel_wr;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_sel;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_load_A;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_load_B;
    sc_signal< sc_lv<2> > s_axis_video_V_user_V_0_state;
    sc_signal< sc_logic > s_axis_video_V_user_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > s_axis_video_V_last_V_0_data_out;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_vld_in;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_vld_out;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_ack_in;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_ack_out;
    sc_signal< sc_lv<1> > s_axis_video_V_last_V_0_payload_A;
    sc_signal< sc_lv<1> > s_axis_video_V_last_V_0_payload_B;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_sel_rd;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_sel_wr;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_sel;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_load_A;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_load_B;
    sc_signal< sc_lv<2> > s_axis_video_V_last_V_0_state;
    sc_signal< sc_logic > s_axis_video_V_last_V_0_state_cmp_full;
    sc_signal< sc_logic > s_axis_video_V_dest_V_0_vld_in;
    sc_signal< sc_logic > s_axis_video_V_dest_V_0_ack_out;
    sc_signal< sc_lv<2> > s_axis_video_V_dest_V_0_state;
    sc_signal< sc_lv<8> > m_axis_video_V_data_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_ack_out;
    sc_signal< sc_lv<8> > m_axis_video_V_data_V_1_payload_A;
    sc_signal< sc_lv<8> > m_axis_video_V_data_V_1_payload_B;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_sel_wr;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_sel;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_load_A;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > m_axis_video_V_data_V_1_state;
    sc_signal< sc_logic > m_axis_video_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > m_axis_video_V_keep_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_keep_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_keep_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_keep_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_keep_V_1_ack_out;
    sc_signal< sc_logic > m_axis_video_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_keep_V_1_sel;
    sc_signal< sc_lv<2> > m_axis_video_V_keep_V_1_state;
    sc_signal< sc_lv<1> > m_axis_video_V_strb_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_strb_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_strb_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_strb_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_strb_V_1_ack_out;
    sc_signal< sc_logic > m_axis_video_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_strb_V_1_sel;
    sc_signal< sc_lv<2> > m_axis_video_V_strb_V_1_state;
    sc_signal< sc_lv<1> > m_axis_video_V_user_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_ack_out;
    sc_signal< sc_lv<1> > m_axis_video_V_user_V_1_payload_A;
    sc_signal< sc_lv<1> > m_axis_video_V_user_V_1_payload_B;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_sel_wr;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_sel;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_load_A;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_load_B;
    sc_signal< sc_lv<2> > m_axis_video_V_user_V_1_state;
    sc_signal< sc_logic > m_axis_video_V_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > m_axis_video_V_last_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > m_axis_video_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > m_axis_video_V_last_V_1_payload_B;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_sel_wr;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_sel;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_load_A;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > m_axis_video_V_last_V_1_state;
    sc_signal< sc_logic > m_axis_video_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > m_axis_video_V_id_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_id_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_id_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_id_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_id_V_1_ack_out;
    sc_signal< sc_logic > m_axis_video_V_id_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_id_V_1_sel;
    sc_signal< sc_lv<2> > m_axis_video_V_id_V_1_state;
    sc_signal< sc_lv<1> > m_axis_video_V_dest_V_1_data_out;
    sc_signal< sc_logic > m_axis_video_V_dest_V_1_vld_in;
    sc_signal< sc_logic > m_axis_video_V_dest_V_1_vld_out;
    sc_signal< sc_logic > m_axis_video_V_dest_V_1_ack_in;
    sc_signal< sc_logic > m_axis_video_V_dest_V_1_ack_out;
    sc_signal< sc_logic > m_axis_video_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_video_V_dest_V_1_sel;
    sc_signal< sc_lv<2> > m_axis_video_V_dest_V_1_state;
    sc_signal< sc_logic > s_axis_video_TDATA_blk_n;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_219_p2;
    sc_signal< sc_logic > m_axis_video_TDATA_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_523;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_523_pp0_iter1_reg;
    sc_signal< sc_lv<64> > indvar_flatten_reg_163;
    sc_signal< sc_lv<31> > j_reg_174;
    sc_signal< sc_lv<31> > i_reg_185;
    sc_signal< sc_lv<2> > pattern_V_read_read_fu_98_p2;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<64> > bound_fu_204_p2;
    sc_signal< sc_lv<64> > bound_reg_518;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<64> > indvar_flatten_next_fu_224_p2;
    sc_signal< sc_lv<31> > j_cast5_mid2_v_fu_236_p3;
    sc_signal< sc_lv<31> > j_cast5_mid2_v_reg_532;
    sc_signal< sc_lv<1> > tmp_user_V_reg_537;
    sc_signal< sc_lv<1> > tmp_last_V_reg_542;
    sc_signal< sc_lv<31> > i_1_fu_488_p3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_lv<31> > ap_phi_mux_j_phi_fu_178_p4;
    sc_signal< sc_lv<8> > tmp_data_V_fu_94;
    sc_signal< sc_lv<8> > video_o_data_V_3_fu_310_p3;
    sc_signal< sc_lv<8> > video_o_data_V_2_fu_363_p3;
    sc_signal< sc_lv<8> > video_o_data_V_1_fu_416_p3;
    sc_signal< sc_lv<8> > video_o_data_V_fu_469_p3;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > bound_fu_204_p0;
    sc_signal< sc_lv<32> > bound_fu_204_p1;
    sc_signal< sc_lv<32> > i_cast_fu_210_p1;
    sc_signal< sc_lv<1> > tmp_4_fu_214_p2;
    sc_signal< sc_lv<31> > j_s_fu_230_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_248_p1;
    sc_signal< sc_lv<1> > i_cast4_mid2_fu_252_p2;
    sc_signal< sc_lv<8> > tmp_17_fu_270_p1;
    sc_signal< sc_lv<8> > tmp_18_fu_274_p4;
    sc_signal< sc_lv<8> > tmp_20_fu_292_p4;
    sc_signal< sc_lv<1> > tmp_1_fu_244_p1;
    sc_signal< sc_lv<8> > tmp_19_fu_284_p3;
    sc_signal< sc_lv<8> > tmp_21_fu_302_p3;
    sc_signal< sc_lv<8> > tmp_12_fu_323_p4;
    sc_signal< sc_lv<8> > tmp_13_fu_333_p1;
    sc_signal< sc_lv<8> > tmp_15_fu_345_p4;
    sc_signal< sc_lv<8> > tmp_14_fu_337_p3;
    sc_signal< sc_lv<8> > tmp_16_fu_355_p3;
    sc_signal< sc_lv<8> > tmp_8_fu_376_p1;
    sc_signal< sc_lv<8> > tmp_9_fu_380_p4;
    sc_signal< sc_lv<8> > tmp_10_fu_398_p4;
    sc_signal< sc_lv<8> > tmp_s_fu_390_p3;
    sc_signal< sc_lv<8> > tmp_11_fu_408_p3;
    sc_signal< sc_lv<8> > tmp_fu_429_p4;
    sc_signal< sc_lv<8> > tmp_7_fu_439_p1;
    sc_signal< sc_lv<8> > tmp_5_fu_451_p4;
    sc_signal< sc_lv<8> > tmp_2_fu_443_p3;
    sc_signal< sc_lv<8> > tmp_6_fu_461_p3;
    sc_signal< sc_lv<31> > i_op_fu_482_p2;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< bool > ap_block_state5;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<64> > bound_fu_204_p00;
    sc_signal< sc_lv<64> > bound_fu_204_p10;
    sc_signal< bool > ap_condition_901;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state5;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_io();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_io();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5();
    void thread_ap_condition_901();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_enable_pp0();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_j_phi_fu_178_p4();
    void thread_ap_rst_n_inv();
    void thread_bound_fu_204_p0();
    void thread_bound_fu_204_p00();
    void thread_bound_fu_204_p1();
    void thread_bound_fu_204_p10();
    void thread_bound_fu_204_p2();
    void thread_exitcond_flatten_fu_219_p2();
    void thread_i_1_fu_488_p3();
    void thread_i_cast4_mid2_fu_252_p2();
    void thread_i_cast_fu_210_p1();
    void thread_i_op_fu_482_p2();
    void thread_indvar_flatten_next_fu_224_p2();
    void thread_j_cast5_mid2_v_fu_236_p3();
    void thread_j_s_fu_230_p2();
    void thread_m_axis_video_TDATA();
    void thread_m_axis_video_TDATA_blk_n();
    void thread_m_axis_video_TDEST();
    void thread_m_axis_video_TID();
    void thread_m_axis_video_TKEEP();
    void thread_m_axis_video_TLAST();
    void thread_m_axis_video_TSTRB();
    void thread_m_axis_video_TUSER();
    void thread_m_axis_video_TVALID();
    void thread_m_axis_video_V_data_V_1_ack_in();
    void thread_m_axis_video_V_data_V_1_ack_out();
    void thread_m_axis_video_V_data_V_1_data_out();
    void thread_m_axis_video_V_data_V_1_load_A();
    void thread_m_axis_video_V_data_V_1_load_B();
    void thread_m_axis_video_V_data_V_1_sel();
    void thread_m_axis_video_V_data_V_1_state_cmp_full();
    void thread_m_axis_video_V_data_V_1_vld_in();
    void thread_m_axis_video_V_data_V_1_vld_out();
    void thread_m_axis_video_V_dest_V_1_ack_in();
    void thread_m_axis_video_V_dest_V_1_ack_out();
    void thread_m_axis_video_V_dest_V_1_data_out();
    void thread_m_axis_video_V_dest_V_1_sel();
    void thread_m_axis_video_V_dest_V_1_vld_in();
    void thread_m_axis_video_V_dest_V_1_vld_out();
    void thread_m_axis_video_V_id_V_1_ack_in();
    void thread_m_axis_video_V_id_V_1_ack_out();
    void thread_m_axis_video_V_id_V_1_data_out();
    void thread_m_axis_video_V_id_V_1_sel();
    void thread_m_axis_video_V_id_V_1_vld_in();
    void thread_m_axis_video_V_id_V_1_vld_out();
    void thread_m_axis_video_V_keep_V_1_ack_in();
    void thread_m_axis_video_V_keep_V_1_ack_out();
    void thread_m_axis_video_V_keep_V_1_data_out();
    void thread_m_axis_video_V_keep_V_1_sel();
    void thread_m_axis_video_V_keep_V_1_vld_in();
    void thread_m_axis_video_V_keep_V_1_vld_out();
    void thread_m_axis_video_V_last_V_1_ack_in();
    void thread_m_axis_video_V_last_V_1_ack_out();
    void thread_m_axis_video_V_last_V_1_data_out();
    void thread_m_axis_video_V_last_V_1_load_A();
    void thread_m_axis_video_V_last_V_1_load_B();
    void thread_m_axis_video_V_last_V_1_sel();
    void thread_m_axis_video_V_last_V_1_state_cmp_full();
    void thread_m_axis_video_V_last_V_1_vld_in();
    void thread_m_axis_video_V_last_V_1_vld_out();
    void thread_m_axis_video_V_strb_V_1_ack_in();
    void thread_m_axis_video_V_strb_V_1_ack_out();
    void thread_m_axis_video_V_strb_V_1_data_out();
    void thread_m_axis_video_V_strb_V_1_sel();
    void thread_m_axis_video_V_strb_V_1_vld_in();
    void thread_m_axis_video_V_strb_V_1_vld_out();
    void thread_m_axis_video_V_user_V_1_ack_in();
    void thread_m_axis_video_V_user_V_1_ack_out();
    void thread_m_axis_video_V_user_V_1_data_out();
    void thread_m_axis_video_V_user_V_1_load_A();
    void thread_m_axis_video_V_user_V_1_load_B();
    void thread_m_axis_video_V_user_V_1_sel();
    void thread_m_axis_video_V_user_V_1_state_cmp_full();
    void thread_m_axis_video_V_user_V_1_vld_in();
    void thread_m_axis_video_V_user_V_1_vld_out();
    void thread_pattern_V_read_read_fu_98_p2();
    void thread_s_axis_video_TDATA_blk_n();
    void thread_s_axis_video_TREADY();
    void thread_s_axis_video_V_data_V_0_ack_in();
    void thread_s_axis_video_V_data_V_0_ack_out();
    void thread_s_axis_video_V_data_V_0_data_out();
    void thread_s_axis_video_V_data_V_0_load_A();
    void thread_s_axis_video_V_data_V_0_load_B();
    void thread_s_axis_video_V_data_V_0_sel();
    void thread_s_axis_video_V_data_V_0_state_cmp_full();
    void thread_s_axis_video_V_data_V_0_vld_in();
    void thread_s_axis_video_V_data_V_0_vld_out();
    void thread_s_axis_video_V_dest_V_0_ack_out();
    void thread_s_axis_video_V_dest_V_0_vld_in();
    void thread_s_axis_video_V_last_V_0_ack_in();
    void thread_s_axis_video_V_last_V_0_ack_out();
    void thread_s_axis_video_V_last_V_0_data_out();
    void thread_s_axis_video_V_last_V_0_load_A();
    void thread_s_axis_video_V_last_V_0_load_B();
    void thread_s_axis_video_V_last_V_0_sel();
    void thread_s_axis_video_V_last_V_0_state_cmp_full();
    void thread_s_axis_video_V_last_V_0_vld_in();
    void thread_s_axis_video_V_last_V_0_vld_out();
    void thread_s_axis_video_V_user_V_0_ack_in();
    void thread_s_axis_video_V_user_V_0_ack_out();
    void thread_s_axis_video_V_user_V_0_data_out();
    void thread_s_axis_video_V_user_V_0_load_A();
    void thread_s_axis_video_V_user_V_0_load_B();
    void thread_s_axis_video_V_user_V_0_sel();
    void thread_s_axis_video_V_user_V_0_state_cmp_full();
    void thread_s_axis_video_V_user_V_0_vld_in();
    void thread_s_axis_video_V_user_V_0_vld_out();
    void thread_tmp_10_fu_398_p4();
    void thread_tmp_11_fu_408_p3();
    void thread_tmp_12_fu_323_p4();
    void thread_tmp_13_fu_333_p1();
    void thread_tmp_14_fu_337_p3();
    void thread_tmp_15_fu_345_p4();
    void thread_tmp_16_fu_355_p3();
    void thread_tmp_17_fu_270_p1();
    void thread_tmp_18_fu_274_p4();
    void thread_tmp_19_fu_284_p3();
    void thread_tmp_1_fu_244_p1();
    void thread_tmp_20_fu_292_p4();
    void thread_tmp_21_fu_302_p3();
    void thread_tmp_2_fu_443_p3();
    void thread_tmp_3_fu_248_p1();
    void thread_tmp_4_fu_214_p2();
    void thread_tmp_5_fu_451_p4();
    void thread_tmp_6_fu_461_p3();
    void thread_tmp_7_fu_439_p1();
    void thread_tmp_8_fu_376_p1();
    void thread_tmp_9_fu_380_p4();
    void thread_tmp_fu_429_p4();
    void thread_tmp_s_fu_390_p3();
    void thread_video_o_data_V_1_fu_416_p3();
    void thread_video_o_data_V_2_fu_363_p3();
    void thread_video_o_data_V_3_fu_310_p3();
    void thread_video_o_data_V_fu_469_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
